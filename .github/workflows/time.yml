name: Time

on: [ push, pull_request, workflow_dispatch ]

jobs:

  # gcc ########################################################################

  gcc-5:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Compiler setup
      run: |
        sudo apt-get update
        sudo apt-get install gcc-5 g++-5
    - name: Time
      env:
        CXX: g++-5
        CXXFLAGS: -std=c++11 -DCXON_TIME_ONLY
      run: make time

  gcc-11:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout cxon
      uses: actions/checkout@v2
    - name: Checkout cxon-store
      uses: actions/checkout@v2
      with:
        repository: oknenavin/store
        token: ${{ secrets.CXON_STORE_TOKEN }}
        ref: master
        path: .dep/store
    - name: Checkout Boost/JSON
      uses: actions/checkout@v2
      with:
        repository: boostorg/json
        ref: master
        path: .dep/boost
    - name: Checkout RapidJSON
      uses: actions/checkout@v2
      with:
        repository: tencent/rapidjson
        ref: master
        path: .dep/rapidjson
    - name: Checkout nlohmann/json
      uses: actions/checkout@v2
      with:
        repository: nlohmann/json
        ref: master
        path: .dep/nlohmann
    - name: Checkout fastfloat/fast_float
      uses: actions/checkout@v2
      with:
        repository: fastfloat/fast_float
        ref: main
        path: .dep/fast_float
    - name: Compiler setup
      run: |
        sudo apt-get update
        sudo apt-get install gcc-11 g++-11
    - name: Time
      env:
        CXX: g++-11
        CXXFLAGS: -std=c++20 -DCXON_TIME_ONLY -I ../.dep/boost/include -DCXON_TIME_BOOST_JSON -I ../.dep/rapidjson/include -DCXON_TIME_RAPIDJSON -I ../.dep/nlohmann/single_include -DCXON_TIME_NLOHMANN
      run: |
        echo "# $(date -u --iso-8601=seconds) / g++11 / defualt" >> .dep/store/cxon/benchmarks/tables.g++
        make -s time | tee -a .dep/store/cxon/benchmarks/tables.g++
    - name: Time (fast_float)
      env:
        CXX: g++-11
        CXXFLAGS: -std=c++20 -DCXON_TIME_ONLY -I ../.dep/fast_float/include -DCXON_TIME_FAST_FLOAT -I ../.dep/boost/include -DCXON_TIME_BOOST_JSON -I ../.dep/rapidjson/include -DCXON_TIME_RAPIDJSON -I ../.dep/nlohmann/single_include -DCXON_TIME_NLOHMANN
      run: |
        echo "# $(date -u --iso-8601=seconds) / g++11 / fast_float" >> .dep/store/cxon/benchmarks/tables.g++
        make -s clean && make -s time | tee -a .dep/store/cxon/benchmarks/tables.g++
    - name: Store the results
      run: |
        cd .dep/store
        git config user.name "oknenavin" && git config user.email ${{ secrets.CXON_MAIL }}
        cat tables.g++.txt >> tables.g++ && mv -f tables.g++ tables.g++.txt
        git commit -am "$(git rev-parse --short "$GITHUB_SHA") / $(date -u --iso-8601=seconds)"
        git pull --rebase && git push

  # clang ######################################################################

  #clang-3-5:
  #  runs-on: ubuntu-16.04
  #  steps:
  #  - uses: actions/checkout@v2
  #  - name: Compiler setup
  #    run: |
  #      sudo apt-get update
  #      sudo apt-get install clang-3.5
  #  - name: Time
  #    env:
  #      CXX: clang++-3.5
  #      CXXFLAGS: -std=c++11 -DCXON_TIME_ONLY
  #    run: make time

  clang-4:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Compiler setup
      run: |
        sudo apt-get update
        sudo apt-get install clang-4.0
    - name: Time
      env:
        CXX: clang++-4.0
        CXXFLAGS: -std=c++11 -DCXON_TIME_ONLY
      run: make time

  clang-12:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout cxon
      uses: actions/checkout@v2
    - name: Checkout cxon-store
      uses: actions/checkout@v2
      with:
        repository: oknenavin/store
        token: ${{ secrets.CXON_STORE_TOKEN }}
        ref: master
        path: .dep/store
    - name: Checkout Boost/JSON
      uses: actions/checkout@v2
      with:
        repository: boostorg/json
        ref: master
        path: .dep/boost
    - name: Checkout RapidJSON
      uses: actions/checkout@v2
      with:
        repository: tencent/rapidjson
        ref: master
        path: .dep/rapidjson
    - name: Checkout nlohmann/json
      uses: actions/checkout@v2
      with:
        repository: nlohmann/json
        ref: master
        path: .dep/nlohmann
    - name: Checkout fastfloat/fast_float
      uses: actions/checkout@v2
      with:
        repository: fastfloat/fast_float
        ref: main
        path: .dep/fast_float
    - name: Compiler setup
      run: |
        sudo apt-get update
        sudo apt-get install clang-12
    - name: Time
      env:
        CXX: clang++-12
        CXXFLAGS: -std=c++20 -DCXON_TIME_ONLY -I ../.dep/boost/include -DCXON_TIME_BOOST_JSON -I ../.dep/rapidjson/include -DCXON_TIME_RAPIDJSON -I ../.dep/nlohmann/single_include -DCXON_TIME_NLOHMANN
      run: |
        echo "# $(date -u --iso-8601=seconds) / clang++12 / defualt" >> .dep/store/cxon/benchmarks/tables.clang++
        make -s time | tee -a .dep/store/cxon/benchmarks/tables.clang++
    - name: Time (fast_float)
      env:
        CXX: clang++-12
        CXXFLAGS: -std=c++20 -DCXON_TIME_ONLY -I ../.dep/fast_float/include -DCXON_TIME_FAST_FLOAT -I ../.dep/boost/include -DCXON_TIME_BOOST_JSON -I ../.dep/rapidjson/include -DCXON_TIME_RAPIDJSON -I ../.dep/nlohmann/single_include -DCXON_TIME_NLOHMANN
      run: |
        echo "# $(date -u --iso-8601=seconds) / clang++11 / fast_float" >> .dep/store/cxon/benchmarks/tables.clang++
        make -s clean && make -s time | tee -a .dep/store/cxon/benchmarks/tables.clang++
    - name: Store the results
      run: |
        cd .dep/store
        git config user.name "oknenavin" && git config user.email ${{ secrets.CXON_MAIL }}
        cat tables.clang++.txt >> tables.clang++ && mv -f tables.clang++ tables.clang++.txt
        git commit -am "$(git rev-parse --short "$GITHUB_SHA") / $(date -u --iso-8601=seconds)"
        git pull --rebase && git push
