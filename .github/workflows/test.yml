name: C/C++ CI

on:
  push:
    branches: [ features/cbor ]
  pull_request:
    branches: [ features/cbor ]
  workflow_dispatch:
    branches: [ features/cbor ]

jobs:

  default:
    runs-on: ubuntu-latest
    steps:
    - name: Test
      run: echo Test
    #- name: make distcheck
    #  run: make distcheck
  
  ##############################################################################
  # gcc

  gcc-8:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install gcc-8 g++-8
    - name: Check
      env:
        CXX: g++-8
        CXXFLAGS: -std=c++17
      run: make -j check

  gcc-9:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install gcc-9 g++-9
    - name: Check
      env:
        CXX: g++-9
        CXXFLAGS: -std=c++17
      run: make -j check

  gcc-10:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install gcc-10 g++-10
    - name: Check
      env:
        CXX: g++-10
        CXXFLAGS: -std=c++20
      run: make -j check
  
  ##############################################################################
  # clang

  clang-9:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install clang-9
    - name: Check
      env:
        CXX: clang++-9
        CXXFLAGS: -std=c++11
      run: make -j check

  clang-10:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install clang-10
    - name: Check
      env:
        CXX: clang++-10
        CXXFLAGS: -std=c++17
      run: make -j check

  clang-11:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install clang-11
    - name: Check
      env:
        CXX: clang++-11
        CXXFLAGS: -std=c++20
      run: make -j check
  
  ##############################################################################
  # codecov

  codecov:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install gcc-8 g++-8
    - name: Check
      env:
        CXX: g++-8
        CXXFLAGS: --coverage -std=c++17
      run: make -j check
    - name: Coverage
      run: |
        wget http://downloads.sourceforge.net/ltp/lcov-1.14.tar.gz
        tar xvfz lcov-1.14.tar.gz
        make -C lcov-1.14
        lcov-1.14/bin/lcov --gcov-tool gcov-8 -c -d . -o cov.info
        lcov-1.14/bin/lcov -e cov.info '*/cxon/*.hxx' -o cxon.info 
        lcov-1.14/bin/lcov -l cxon.info
        bash <(curl -s https://codecov.io/bash) -f cxon.info || echo "upload failed"
