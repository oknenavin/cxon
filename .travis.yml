language: bash

matrix:
  include:

    # gcc

    - os: linux
      env: CXX=g++-5 TARGET=test
      addons:
        apt:
          sources:  ubuntu-toolchain-r-test
          packages: g++-5

    - os: linux
      env: CXX=g++-6 TARGET=test
      addons:
        apt:
          sources:  ubuntu-toolchain-r-test
          packages: g++-6

    - os: linux
      env: CXX=g++-7 TARGET=test
      addons:
        apt:
          sources:  ubuntu-toolchain-r-test
          packages: g++-7

    - os: linux
      env: CXX=g++-8 TARGET=test
      addons:
        apt:
          sources:  ubuntu-toolchain-r-test
          packages: g++-8

    - os: linux
      env: CXX=g++-9 TARGET=test
      addons:
        apt:
          sources:  ubuntu-toolchain-r-test
          packages: g++-9

    - os: linux
      env: CXX=g++-9 CXXFLAGS=-std=c++17 TARGET=test
      addons:
        apt:
          sources:  ubuntu-toolchain-r-test
          packages: g++-9

    # clang

    - os: linux
      env: CXX=clang++-3.5 TARGET=test
      addons:
        apt:
          sources:  ubuntu-toolchain-r-test
          packages: ['g++-5', 'clang-3.5']

    - os: linux
      env: CXX=clang++-4.0 TARGET=test
      addons:
        apt:
          sources:  ubuntu-toolchain-r-test
          packages: ['g++-6', 'clang-4.0']

    - os: linux
      env: CXX=clang++-5.0 TARGET=test
      addons:
        apt:
          sources:  ubuntu-toolchain-r-test
          packages: ['g++-6', 'clang-5.0']

    - os: linux
      env: CXX=clang++-6.0 TARGET=test
      addons:
        apt:
          sources:  ubuntu-toolchain-r-test
          packages: ['g++-6', 'clang-6.0']

    - os: linux
      env: CXX=clang++-7.0 TARGET=test
      addons:
        apt:
          sources:  ubuntu-toolchain-r-test
          packages: ['g++-7', 'clang-7.0']

    - os: linux
      env: CXX=clang++-8.0 TARGET=test
      addons:
        apt:
          sources:  ubuntu-toolchain-r-test
          packages: ['g++-8', 'clang-8.0']

    # coverage

    - os: linux
      env: CXX=g++-8 CXXFLAGS=--coverage TARGET=test
      addons:
        apt:
          sources:  ubuntu-toolchain-r-test
          packages: g++-8
      after_success:
        - wget http://downloads.sourceforge.net/ltp/lcov-1.14.tar.gz
        - tar xvfz lcov-1.14.tar.gz
        - make -C lcov-1.14
        - lcov-1.14/bin/lcov --gcov-tool gcov-8 -c -d . -o cov.info
        - lcov-1.14/bin/lcov -e cov.info '*/cxon/*.hxx' -o cxon.info 
        - lcov-1.14/bin/lcov -l cxon.info
        - bash <(curl -s https://codecov.io/bash) -f cxon.info || echo "upload failed"

    # os x

    - os: osx
      osx_image: xcode10.3
      script:
        - cd test && mkdir .bld && cd .bld
        - cmake ..
        - cmake --build . --config Release
        - ctest -V -C Release

    # windows

    - os: windows
      env: CMAKE_PATH="/c/Program Files/CMake/bin"
      script:
        - export PATH=$CMAKE_PATH:$PATH
        - cd test && mkdir .bld && cd .bld
        - cmake ..
        - cmake --build . --config Release
        - ctest -V -C Release

script:
  - make $TARGET
